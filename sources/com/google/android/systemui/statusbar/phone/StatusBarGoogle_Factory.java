package com.google.android.systemui.statusbar.phone;

import android.app.AlarmManager;
import android.app.WallpaperManager;
import android.content.Context;
import android.hardware.devicestate.DeviceStateManager;
import android.os.Handler;
import android.os.PowerManager;
import android.util.DisplayMetrics;
import com.android.internal.jank.InteractionJankMonitor;
import com.android.internal.logging.MetricsLogger;
import com.android.keyguard.KeyguardUpdateMonitor;
import com.android.keyguard.ViewMediatorCallback;
import com.android.systemui.InitController;
import com.android.systemui.accessibility.floatingmenu.AccessibilityFloatingMenuController;
import com.android.systemui.animation.ActivityLaunchAnimator;
import com.android.systemui.assist.AssistManager;
import com.android.systemui.broadcast.BroadcastDispatcher;
import com.android.systemui.classifier.FalsingCollector;
import com.android.systemui.colorextraction.SysuiColorExtractor;
import com.android.systemui.demomode.DemoModeController;
import com.android.systemui.dreams.DreamOverlayStateController;
import com.android.systemui.flags.FeatureFlags;
import com.android.systemui.fragments.FragmentService;
import com.android.systemui.keyguard.KeyguardUnlockAnimationController;
import com.android.systemui.keyguard.KeyguardViewMediator;
import com.android.systemui.keyguard.ScreenLifecycle;
import com.android.systemui.keyguard.WakefulnessLifecycle;
import com.android.systemui.navigationbar.NavigationBarController;
import com.android.systemui.plugins.FalsingManager;
import com.android.systemui.plugins.PluginDependencyProvider;
import com.android.systemui.recents.ScreenPinningRequest;
import com.android.systemui.settings.brightness.BrightnessSliderController;
import com.android.systemui.shared.plugins.PluginManager;
import com.android.systemui.statusbar.CommandQueue;
import com.android.systemui.statusbar.LockscreenShadeTransitionController;
import com.android.systemui.statusbar.NotificationLockscreenUserManager;
import com.android.systemui.statusbar.NotificationMediaManager;
import com.android.systemui.statusbar.NotificationRemoteInputManager;
import com.android.systemui.statusbar.NotificationShadeDepthController;
import com.android.systemui.statusbar.NotificationShadeWindowController;
import com.android.systemui.statusbar.NotificationViewHierarchyManager;
import com.android.systemui.statusbar.PulseExpansionHandler;
import com.android.systemui.statusbar.SysuiStatusBarStateController;
import com.android.systemui.statusbar.charging.WiredChargingRippleController;
import com.android.systemui.statusbar.connectivity.NetworkController;
import com.android.systemui.statusbar.notification.DynamicPrivacyController;
import com.android.systemui.statusbar.notification.NotifPipelineFlags;
import com.android.systemui.statusbar.notification.NotificationEntryManager;
import com.android.systemui.statusbar.notification.NotificationWakeUpCoordinator;
import com.android.systemui.statusbar.notification.collection.legacy.VisualStabilityManager;
import com.android.systemui.statusbar.notification.collection.render.NotifShadeEventSource;
import com.android.systemui.statusbar.notification.init.NotificationsController;
import com.android.systemui.statusbar.notification.interruption.NotificationInterruptStateProvider;
import com.android.systemui.statusbar.notification.logging.NotificationLogger;
import com.android.systemui.statusbar.notification.row.NotificationGutsManager;
import com.android.systemui.statusbar.phone.AutoHideController;
import com.android.systemui.statusbar.phone.BiometricUnlockController;
import com.android.systemui.statusbar.phone.DozeParameters;
import com.android.systemui.statusbar.phone.DozeScrimController;
import com.android.systemui.statusbar.phone.DozeServiceHost;
import com.android.systemui.statusbar.phone.HeadsUpManagerPhone;
import com.android.systemui.statusbar.phone.KeyguardBypassController;
import com.android.systemui.statusbar.phone.KeyguardDismissUtil;
import com.android.systemui.statusbar.phone.LightBarController;
import com.android.systemui.statusbar.phone.LockscreenGestureLogger;
import com.android.systemui.statusbar.phone.LockscreenWallpaper;
import com.android.systemui.statusbar.phone.NotificationIconAreaController;
import com.android.systemui.statusbar.phone.PhoneStatusBarPolicy;
import com.android.systemui.statusbar.phone.ScreenOffAnimationController;
import com.android.systemui.statusbar.phone.ScrimController;
import com.android.systemui.statusbar.phone.ShadeController;
import com.android.systemui.statusbar.phone.StatusBarHideIconsForBouncerManager;
import com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager;
import com.android.systemui.statusbar.phone.StatusBarNotificationActivityStarter;
import com.android.systemui.statusbar.phone.StatusBarSignalPolicy;
import com.android.systemui.statusbar.phone.StatusBarTouchableRegionManager;
import com.android.systemui.statusbar.phone.dagger.StatusBarComponent;
import com.android.systemui.statusbar.phone.ongoingcall.OngoingCallController;
import com.android.systemui.statusbar.phone.panelstate.PanelExpansionStateManager;
import com.android.systemui.statusbar.policy.BatteryController;
import com.android.systemui.statusbar.policy.ConfigurationController;
import com.android.systemui.statusbar.policy.DeviceProvisionedController;
import com.android.systemui.statusbar.policy.ExtensionController;
import com.android.systemui.statusbar.policy.KeyguardStateController;
import com.android.systemui.statusbar.policy.UserInfoControllerImpl;
import com.android.systemui.statusbar.policy.UserSwitcherController;
import com.android.systemui.statusbar.window.StatusBarWindowController;
import com.android.systemui.statusbar.window.StatusBarWindowStateController;
import com.android.systemui.util.WallpaperController;
import com.android.systemui.util.concurrency.DelayableExecutor;
import com.android.systemui.util.concurrency.MessageRouter;
import com.android.systemui.volume.VolumeComponent;
import com.android.systemui.wmshell.BubblesManager;
import com.android.wm.shell.bubbles.Bubbles;
import com.android.wm.shell.legacysplitscreen.LegacySplitScreen;
import com.android.wm.shell.startingsurface.StartingSurface;
import com.google.android.systemui.reversecharging.ReverseChargingViewController;
import com.google.android.systemui.smartspace.SmartSpaceController;
import com.google.android.systemui.statusbar.KeyguardIndicationControllerGoogle;
import com.google.android.systemui.statusbar.notification.voicereplies.NotificationVoiceReplyClient;
import dagger.Lazy;
import dagger.internal.DoubleCheck;
import dagger.internal.Factory;
import java.util.Optional;
import java.util.concurrent.Executor;
import javax.inject.Provider;
/* loaded from: classes.dex */
public final class StatusBarGoogle_Factory implements Factory<StatusBarGoogle> {
    public final Provider<AccessibilityFloatingMenuController> accessibilityFloatingMenuControllerProvider;
    public final Provider<ActivityLaunchAnimator> activityLaunchAnimatorProvider;
    public final Provider<AlarmManager> alarmManagerProvider;
    public final Provider<AssistManager> assistManagerLazyProvider;
    public final Provider<AutoHideController> autoHideControllerProvider;
    public final Provider<BatteryController> batteryControllerProvider;
    public final Provider<BiometricUnlockController> biometricUnlockControllerLazyProvider;
    public final Provider<BrightnessSliderController.Factory> brightnessSliderFactoryProvider;
    public final Provider<BroadcastDispatcher> broadcastDispatcherProvider;
    public final Provider<Optional<BubblesManager>> bubblesManagerOptionalProvider;
    public final Provider<Optional<Bubbles>> bubblesOptionalProvider;
    public final Provider<SysuiColorExtractor> colorExtractorProvider;
    public final Provider<CommandQueue> commandQueueProvider;
    public final Provider<ConfigurationController> configurationControllerProvider;
    public final Provider<Context> contextProvider;
    public final Provider<DelayableExecutor> delayableExecutorProvider;
    public final Provider<DemoModeController> demoModeControllerProvider;
    public final Provider<DeviceProvisionedController> deviceProvisionedControllerProvider;
    public final Provider<DeviceStateManager> deviceStateManagerProvider;
    public final Provider<DisplayMetrics> displayMetricsProvider;
    public final Provider<DozeParameters> dozeParametersProvider;
    public final Provider<DozeScrimController> dozeScrimControllerProvider;
    public final Provider<DozeServiceHost> dozeServiceHostProvider;
    public final Provider<DreamOverlayStateController> dreamOverlayStateControllerProvider;
    public final Provider<DynamicPrivacyController> dynamicPrivacyControllerProvider;
    public final Provider<ExtensionController> extensionControllerProvider;
    public final Provider<FalsingCollector> falsingCollectorProvider;
    public final Provider<FalsingManager> falsingManagerProvider;
    public final Provider<FeatureFlags> featureFlagsProvider;
    public final Provider<FragmentService> fragmentServiceProvider;
    public final Provider<HeadsUpManagerPhone> headsUpManagerPhoneProvider;
    public final Provider<InitController> initControllerProvider;
    public final Provider<InteractionJankMonitor> jankMonitorProvider;
    public final Provider<KeyguardBypassController> keyguardBypassControllerProvider;
    public final Provider<KeyguardDismissUtil> keyguardDismissUtilProvider;
    public final Provider<KeyguardIndicationControllerGoogle> keyguardIndicationControllerProvider;
    public final Provider<KeyguardStateController> keyguardStateControllerProvider;
    public final Provider<KeyguardUnlockAnimationController> keyguardUnlockAnimationControllerProvider;
    public final Provider<KeyguardUpdateMonitor> keyguardUpdateMonitorProvider;
    public final Provider<KeyguardViewMediator> keyguardViewMediatorProvider;
    public final Provider<LightBarController> lightBarControllerProvider;
    public final Provider<NotificationLockscreenUserManager> lockScreenUserManagerProvider;
    public final Provider<LockscreenGestureLogger> lockscreenGestureLoggerProvider;
    public final Provider<LockscreenShadeTransitionController> lockscreenShadeTransitionControllerProvider;
    public final Provider<LockscreenWallpaper> lockscreenWallpaperLazyProvider;
    public final Provider<Handler> mainHandlerProvider;
    public final Provider<MessageRouter> messageRouterProvider;
    public final Provider<MetricsLogger> metricsLoggerProvider;
    public final Provider<NavigationBarController> navigationBarControllerProvider;
    public final Provider<NetworkController> networkControllerProvider;
    public final Provider<NotifPipelineFlags> notifPipelineFlagsProvider;
    public final Provider<NotifShadeEventSource> notifShadeEventSourceProvider;
    public final Provider<NotificationEntryManager> notificationEntryManagerProvider;
    public final Provider<NotificationGutsManager> notificationGutsManagerProvider;
    public final Provider<NotificationIconAreaController> notificationIconAreaControllerProvider;
    public final Provider<NotificationInterruptStateProvider> notificationInterruptionStateProvider;
    public final Provider<NotificationLogger> notificationLoggerProvider;
    public final Provider<NotificationMediaManager> notificationMediaManagerProvider;
    public final Provider<NotificationShadeDepthController> notificationShadeDepthControllerLazyProvider;
    public final Provider<NotificationShadeWindowController> notificationShadeWindowControllerProvider;
    public final Provider<NotificationViewHierarchyManager> notificationViewHierarchyManagerProvider;
    public final Provider<NotificationWakeUpCoordinator> notificationWakeUpCoordinatorProvider;
    public final Provider<NotificationsController> notificationsControllerProvider;
    public final Provider<OngoingCallController> ongoingCallControllerProvider;
    public final Provider<PanelExpansionStateManager> panelExpansionStateManagerProvider;
    public final Provider<PhoneStatusBarPolicy> phoneStatusBarPolicyProvider;
    public final Provider<PluginDependencyProvider> pluginDependencyProvider;
    public final Provider<PluginManager> pluginManagerProvider;
    public final Provider<PowerManager> powerManagerProvider;
    public final Provider<PulseExpansionHandler> pulseExpansionHandlerProvider;
    public final Provider<NotificationRemoteInputManager> remoteInputManagerProvider;
    public final Provider<Optional<ReverseChargingViewController>> reverseChargingViewControllerOptionalProvider;
    public final Provider<ScreenLifecycle> screenLifecycleProvider;
    public final Provider<ScreenOffAnimationController> screenOffAnimationControllerProvider;
    public final Provider<ScreenPinningRequest> screenPinningRequestProvider;
    public final Provider<ScrimController> scrimControllerProvider;
    public final Provider<ShadeController> shadeControllerProvider;
    public final Provider<StatusBarSignalPolicy> signalPolicyProvider;
    public final Provider<SmartSpaceController> smartSpaceControllerProvider;
    public final Provider<Optional<LegacySplitScreen>> splitScreenOptionalProvider;
    public final Provider<Optional<StartingSurface>> startingSurfaceOptionalProvider;
    public final Provider<StatusBarComponent.Factory> statusBarComponentFactoryProvider;
    public final Provider<StatusBarHideIconsForBouncerManager> statusBarHideIconsForBouncerManagerProvider;
    public final Provider<StatusBarKeyguardViewManager> statusBarKeyguardViewManagerProvider;
    public final Provider<StatusBarNotificationActivityStarter.Builder> statusBarNotificationActivityStarterBuilderProvider;
    public final Provider<SysuiStatusBarStateController> statusBarStateControllerProvider;
    public final Provider<StatusBarTouchableRegionManager> statusBarTouchableRegionManagerProvider;
    public final Provider<StatusBarWindowController> statusBarWindowControllerProvider;
    public final Provider<StatusBarWindowStateController> statusBarWindowStateControllerProvider;
    public final Provider<Handler> timeTickHandlerProvider;
    public final Provider<Executor> uiBgExecutorProvider;
    public final Provider<UserInfoControllerImpl> userInfoControllerImplProvider;
    public final Provider<UserSwitcherController> userSwitcherControllerProvider;
    public final Provider<ViewMediatorCallback> viewMediatorCallbackProvider;
    public final Provider<VisualStabilityManager> visualStabilityManagerProvider;
    public final Provider<Optional<NotificationVoiceReplyClient>> voiceReplyClientProvider;
    public final Provider<VolumeComponent> volumeComponentProvider;
    public final Provider<WakefulnessLifecycle> wakefulnessLifecycleProvider;
    public final Provider<WallpaperController> wallpaperControllerProvider;
    public final Provider<WallpaperManager> wallpaperManagerProvider;
    public final Provider<WallpaperNotifier> wallpaperNotifierProvider;
    public final Provider<WiredChargingRippleController> wiredChargingRippleControllerProvider;

    public StatusBarGoogle_Factory(Provider<SmartSpaceController> provider, Provider<WallpaperNotifier> provider2, Provider<Optional<ReverseChargingViewController>> provider3, Provider<Context> provider4, Provider<NotificationsController> provider5, Provider<FragmentService> provider6, Provider<LightBarController> provider7, Provider<AutoHideController> provider8, Provider<StatusBarWindowController> provider9, Provider<StatusBarWindowStateController> provider10, Provider<KeyguardUpdateMonitor> provider11, Provider<StatusBarSignalPolicy> provider12, Provider<PulseExpansionHandler> provider13, Provider<NotificationWakeUpCoordinator> provider14, Provider<KeyguardBypassController> provider15, Provider<KeyguardStateController> provider16, Provider<HeadsUpManagerPhone> provider17, Provider<DynamicPrivacyController> provider18, Provider<FalsingManager> provider19, Provider<FalsingCollector> provider20, Provider<BroadcastDispatcher> provider21, Provider<NotifShadeEventSource> provider22, Provider<NotificationEntryManager> provider23, Provider<NotificationGutsManager> provider24, Provider<NotificationLogger> provider25, Provider<NotificationInterruptStateProvider> provider26, Provider<NotificationViewHierarchyManager> provider27, Provider<PanelExpansionStateManager> provider28, Provider<KeyguardViewMediator> provider29, Provider<DisplayMetrics> provider30, Provider<MetricsLogger> provider31, Provider<Executor> provider32, Provider<NotificationMediaManager> provider33, Provider<NotificationLockscreenUserManager> provider34, Provider<NotificationRemoteInputManager> provider35, Provider<UserSwitcherController> provider36, Provider<NetworkController> provider37, Provider<BatteryController> provider38, Provider<SysuiColorExtractor> provider39, Provider<ScreenLifecycle> provider40, Provider<WakefulnessLifecycle> provider41, Provider<SysuiStatusBarStateController> provider42, Provider<Optional<BubblesManager>> provider43, Provider<Optional<Bubbles>> provider44, Provider<VisualStabilityManager> provider45, Provider<DeviceProvisionedController> provider46, Provider<NavigationBarController> provider47, Provider<AccessibilityFloatingMenuController> provider48, Provider<AssistManager> provider49, Provider<ConfigurationController> provider50, Provider<NotificationShadeWindowController> provider51, Provider<DozeParameters> provider52, Provider<ScrimController> provider53, Provider<LockscreenWallpaper> provider54, Provider<LockscreenGestureLogger> provider55, Provider<BiometricUnlockController> provider56, Provider<NotificationShadeDepthController> provider57, Provider<DozeServiceHost> provider58, Provider<PowerManager> provider59, Provider<ScreenPinningRequest> provider60, Provider<DozeScrimController> provider61, Provider<VolumeComponent> provider62, Provider<CommandQueue> provider63, Provider<StatusBarComponent.Factory> provider64, Provider<PluginManager> provider65, Provider<Optional<LegacySplitScreen>> provider66, Provider<StatusBarNotificationActivityStarter.Builder> provider67, Provider<ShadeController> provider68, Provider<StatusBarKeyguardViewManager> provider69, Provider<ViewMediatorCallback> provider70, Provider<InitController> provider71, Provider<Handler> provider72, Provider<PluginDependencyProvider> provider73, Provider<KeyguardDismissUtil> provider74, Provider<ExtensionController> provider75, Provider<UserInfoControllerImpl> provider76, Provider<PhoneStatusBarPolicy> provider77, Provider<KeyguardIndicationControllerGoogle> provider78, Provider<DemoModeController> provider79, Provider<StatusBarTouchableRegionManager> provider80, Provider<NotificationIconAreaController> provider81, Provider<BrightnessSliderController.Factory> provider82, Provider<ScreenOffAnimationController> provider83, Provider<WallpaperController> provider84, Provider<OngoingCallController> provider85, Provider<StatusBarHideIconsForBouncerManager> provider86, Provider<LockscreenShadeTransitionController> provider87, Provider<FeatureFlags> provider88, Provider<Optional<NotificationVoiceReplyClient>> provider89, Provider<KeyguardUnlockAnimationController> provider90, Provider<Handler> provider91, Provider<DelayableExecutor> provider92, Provider<MessageRouter> provider93, Provider<WallpaperManager> provider94, Provider<Optional<StartingSurface>> provider95, Provider<ActivityLaunchAnimator> provider96, Provider<AlarmManager> provider97, Provider<NotifPipelineFlags> provider98, Provider<InteractionJankMonitor> provider99, Provider<DeviceStateManager> provider100, Provider<DreamOverlayStateController> provider101, Provider<WiredChargingRippleController> provider102) {
        this.smartSpaceControllerProvider = provider;
        this.wallpaperNotifierProvider = provider2;
        this.reverseChargingViewControllerOptionalProvider = provider3;
        this.contextProvider = provider4;
        this.notificationsControllerProvider = provider5;
        this.fragmentServiceProvider = provider6;
        this.lightBarControllerProvider = provider7;
        this.autoHideControllerProvider = provider8;
        this.statusBarWindowControllerProvider = provider9;
        this.statusBarWindowStateControllerProvider = provider10;
        this.keyguardUpdateMonitorProvider = provider11;
        this.signalPolicyProvider = provider12;
        this.pulseExpansionHandlerProvider = provider13;
        this.notificationWakeUpCoordinatorProvider = provider14;
        this.keyguardBypassControllerProvider = provider15;
        this.keyguardStateControllerProvider = provider16;
        this.headsUpManagerPhoneProvider = provider17;
        this.dynamicPrivacyControllerProvider = provider18;
        this.falsingManagerProvider = provider19;
        this.falsingCollectorProvider = provider20;
        this.broadcastDispatcherProvider = provider21;
        this.notifShadeEventSourceProvider = provider22;
        this.notificationEntryManagerProvider = provider23;
        this.notificationGutsManagerProvider = provider24;
        this.notificationLoggerProvider = provider25;
        this.notificationInterruptionStateProvider = provider26;
        this.notificationViewHierarchyManagerProvider = provider27;
        this.panelExpansionStateManagerProvider = provider28;
        this.keyguardViewMediatorProvider = provider29;
        this.displayMetricsProvider = provider30;
        this.metricsLoggerProvider = provider31;
        this.uiBgExecutorProvider = provider32;
        this.notificationMediaManagerProvider = provider33;
        this.lockScreenUserManagerProvider = provider34;
        this.remoteInputManagerProvider = provider35;
        this.userSwitcherControllerProvider = provider36;
        this.networkControllerProvider = provider37;
        this.batteryControllerProvider = provider38;
        this.colorExtractorProvider = provider39;
        this.screenLifecycleProvider = provider40;
        this.wakefulnessLifecycleProvider = provider41;
        this.statusBarStateControllerProvider = provider42;
        this.bubblesManagerOptionalProvider = provider43;
        this.bubblesOptionalProvider = provider44;
        this.visualStabilityManagerProvider = provider45;
        this.deviceProvisionedControllerProvider = provider46;
        this.navigationBarControllerProvider = provider47;
        this.accessibilityFloatingMenuControllerProvider = provider48;
        this.assistManagerLazyProvider = provider49;
        this.configurationControllerProvider = provider50;
        this.notificationShadeWindowControllerProvider = provider51;
        this.dozeParametersProvider = provider52;
        this.scrimControllerProvider = provider53;
        this.lockscreenWallpaperLazyProvider = provider54;
        this.lockscreenGestureLoggerProvider = provider55;
        this.biometricUnlockControllerLazyProvider = provider56;
        this.notificationShadeDepthControllerLazyProvider = provider57;
        this.dozeServiceHostProvider = provider58;
        this.powerManagerProvider = provider59;
        this.screenPinningRequestProvider = provider60;
        this.dozeScrimControllerProvider = provider61;
        this.volumeComponentProvider = provider62;
        this.commandQueueProvider = provider63;
        this.statusBarComponentFactoryProvider = provider64;
        this.pluginManagerProvider = provider65;
        this.splitScreenOptionalProvider = provider66;
        this.statusBarNotificationActivityStarterBuilderProvider = provider67;
        this.shadeControllerProvider = provider68;
        this.statusBarKeyguardViewManagerProvider = provider69;
        this.viewMediatorCallbackProvider = provider70;
        this.initControllerProvider = provider71;
        this.timeTickHandlerProvider = provider72;
        this.pluginDependencyProvider = provider73;
        this.keyguardDismissUtilProvider = provider74;
        this.extensionControllerProvider = provider75;
        this.userInfoControllerImplProvider = provider76;
        this.phoneStatusBarPolicyProvider = provider77;
        this.keyguardIndicationControllerProvider = provider78;
        this.demoModeControllerProvider = provider79;
        this.statusBarTouchableRegionManagerProvider = provider80;
        this.notificationIconAreaControllerProvider = provider81;
        this.brightnessSliderFactoryProvider = provider82;
        this.screenOffAnimationControllerProvider = provider83;
        this.wallpaperControllerProvider = provider84;
        this.ongoingCallControllerProvider = provider85;
        this.statusBarHideIconsForBouncerManagerProvider = provider86;
        this.lockscreenShadeTransitionControllerProvider = provider87;
        this.featureFlagsProvider = provider88;
        this.voiceReplyClientProvider = provider89;
        this.keyguardUnlockAnimationControllerProvider = provider90;
        this.mainHandlerProvider = provider91;
        this.delayableExecutorProvider = provider92;
        this.messageRouterProvider = provider93;
        this.wallpaperManagerProvider = provider94;
        this.startingSurfaceOptionalProvider = provider95;
        this.activityLaunchAnimatorProvider = provider96;
        this.alarmManagerProvider = provider97;
        this.notifPipelineFlagsProvider = provider98;
        this.jankMonitorProvider = provider99;
        this.deviceStateManagerProvider = provider100;
        this.dreamOverlayStateControllerProvider = provider101;
        this.wiredChargingRippleControllerProvider = provider102;
    }

    public static StatusBarGoogle_Factory create(Provider<SmartSpaceController> provider, Provider<WallpaperNotifier> provider2, Provider<Optional<ReverseChargingViewController>> provider3, Provider<Context> provider4, Provider<NotificationsController> provider5, Provider<FragmentService> provider6, Provider<LightBarController> provider7, Provider<AutoHideController> provider8, Provider<StatusBarWindowController> provider9, Provider<StatusBarWindowStateController> provider10, Provider<KeyguardUpdateMonitor> provider11, Provider<StatusBarSignalPolicy> provider12, Provider<PulseExpansionHandler> provider13, Provider<NotificationWakeUpCoordinator> provider14, Provider<KeyguardBypassController> provider15, Provider<KeyguardStateController> provider16, Provider<HeadsUpManagerPhone> provider17, Provider<DynamicPrivacyController> provider18, Provider<FalsingManager> provider19, Provider<FalsingCollector> provider20, Provider<BroadcastDispatcher> provider21, Provider<NotifShadeEventSource> provider22, Provider<NotificationEntryManager> provider23, Provider<NotificationGutsManager> provider24, Provider<NotificationLogger> provider25, Provider<NotificationInterruptStateProvider> provider26, Provider<NotificationViewHierarchyManager> provider27, Provider<PanelExpansionStateManager> provider28, Provider<KeyguardViewMediator> provider29, Provider<DisplayMetrics> provider30, Provider<MetricsLogger> provider31, Provider<Executor> provider32, Provider<NotificationMediaManager> provider33, Provider<NotificationLockscreenUserManager> provider34, Provider<NotificationRemoteInputManager> provider35, Provider<UserSwitcherController> provider36, Provider<NetworkController> provider37, Provider<BatteryController> provider38, Provider<SysuiColorExtractor> provider39, Provider<ScreenLifecycle> provider40, Provider<WakefulnessLifecycle> provider41, Provider<SysuiStatusBarStateController> provider42, Provider<Optional<BubblesManager>> provider43, Provider<Optional<Bubbles>> provider44, Provider<VisualStabilityManager> provider45, Provider<DeviceProvisionedController> provider46, Provider<NavigationBarController> provider47, Provider<AccessibilityFloatingMenuController> provider48, Provider<AssistManager> provider49, Provider<ConfigurationController> provider50, Provider<NotificationShadeWindowController> provider51, Provider<DozeParameters> provider52, Provider<ScrimController> provider53, Provider<LockscreenWallpaper> provider54, Provider<LockscreenGestureLogger> provider55, Provider<BiometricUnlockController> provider56, Provider<NotificationShadeDepthController> provider57, Provider<DozeServiceHost> provider58, Provider<PowerManager> provider59, Provider<ScreenPinningRequest> provider60, Provider<DozeScrimController> provider61, Provider<VolumeComponent> provider62, Provider<CommandQueue> provider63, Provider<StatusBarComponent.Factory> provider64, Provider<PluginManager> provider65, Provider<Optional<LegacySplitScreen>> provider66, Provider<StatusBarNotificationActivityStarter.Builder> provider67, Provider<ShadeController> provider68, Provider<StatusBarKeyguardViewManager> provider69, Provider<ViewMediatorCallback> provider70, Provider<InitController> provider71, Provider<Handler> provider72, Provider<PluginDependencyProvider> provider73, Provider<KeyguardDismissUtil> provider74, Provider<ExtensionController> provider75, Provider<UserInfoControllerImpl> provider76, Provider<PhoneStatusBarPolicy> provider77, Provider<KeyguardIndicationControllerGoogle> provider78, Provider<DemoModeController> provider79, Provider<StatusBarTouchableRegionManager> provider80, Provider<NotificationIconAreaController> provider81, Provider<BrightnessSliderController.Factory> provider82, Provider<ScreenOffAnimationController> provider83, Provider<WallpaperController> provider84, Provider<OngoingCallController> provider85, Provider<StatusBarHideIconsForBouncerManager> provider86, Provider<LockscreenShadeTransitionController> provider87, Provider<FeatureFlags> provider88, Provider<Optional<NotificationVoiceReplyClient>> provider89, Provider<KeyguardUnlockAnimationController> provider90, Provider<Handler> provider91, Provider<DelayableExecutor> provider92, Provider<MessageRouter> provider93, Provider<WallpaperManager> provider94, Provider<Optional<StartingSurface>> provider95, Provider<ActivityLaunchAnimator> provider96, Provider<AlarmManager> provider97, Provider<NotifPipelineFlags> provider98, Provider<InteractionJankMonitor> provider99, Provider<DeviceStateManager> provider100, Provider<DreamOverlayStateController> provider101, Provider<WiredChargingRippleController> provider102) {
        return new StatusBarGoogle_Factory(provider, provider2, provider3, provider4, provider5, provider6, provider7, provider8, provider9, provider10, provider11, provider12, provider13, provider14, provider15, provider16, provider17, provider18, provider19, provider20, provider21, provider22, provider23, provider24, provider25, provider26, provider27, provider28, provider29, provider30, provider31, provider32, provider33, provider34, provider35, provider36, provider37, provider38, provider39, provider40, provider41, provider42, provider43, provider44, provider45, provider46, provider47, provider48, provider49, provider50, provider51, provider52, provider53, provider54, provider55, provider56, provider57, provider58, provider59, provider60, provider61, provider62, provider63, provider64, provider65, provider66, provider67, provider68, provider69, provider70, provider71, provider72, provider73, provider74, provider75, provider76, provider77, provider78, provider79, provider80, provider81, provider82, provider83, provider84, provider85, provider86, provider87, provider88, provider89, provider90, provider91, provider92, provider93, provider94, provider95, provider96, provider97, provider98, provider99, provider100, provider101, provider102);
    }

    @Override // javax.inject.Provider
    /* renamed from: get */
    public final Object mo144get() {
        SmartSpaceController smartSpaceController = this.smartSpaceControllerProvider.mo144get();
        WallpaperNotifier wallpaperNotifier = this.wallpaperNotifierProvider.mo144get();
        Optional<ReverseChargingViewController> optional = this.reverseChargingViewControllerOptionalProvider.mo144get();
        Context context = this.contextProvider.mo144get();
        NotificationsController notificationsController = this.notificationsControllerProvider.mo144get();
        FragmentService fragmentService = this.fragmentServiceProvider.mo144get();
        LightBarController lightBarController = this.lightBarControllerProvider.mo144get();
        AutoHideController autoHideController = this.autoHideControllerProvider.mo144get();
        StatusBarWindowController statusBarWindowController = this.statusBarWindowControllerProvider.mo144get();
        StatusBarWindowStateController statusBarWindowStateController = this.statusBarWindowStateControllerProvider.mo144get();
        KeyguardUpdateMonitor keyguardUpdateMonitor = this.keyguardUpdateMonitorProvider.mo144get();
        StatusBarSignalPolicy statusBarSignalPolicy = this.signalPolicyProvider.mo144get();
        PulseExpansionHandler pulseExpansionHandler = this.pulseExpansionHandlerProvider.mo144get();
        NotificationWakeUpCoordinator notificationWakeUpCoordinator = this.notificationWakeUpCoordinatorProvider.mo144get();
        KeyguardBypassController keyguardBypassController = this.keyguardBypassControllerProvider.mo144get();
        KeyguardStateController keyguardStateController = this.keyguardStateControllerProvider.mo144get();
        HeadsUpManagerPhone headsUpManagerPhone = this.headsUpManagerPhoneProvider.mo144get();
        DynamicPrivacyController dynamicPrivacyController = this.dynamicPrivacyControllerProvider.mo144get();
        FalsingManager falsingManager = this.falsingManagerProvider.mo144get();
        FalsingCollector falsingCollector = this.falsingCollectorProvider.mo144get();
        BroadcastDispatcher broadcastDispatcher = this.broadcastDispatcherProvider.mo144get();
        NotifShadeEventSource notifShadeEventSource = this.notifShadeEventSourceProvider.mo144get();
        NotificationEntryManager notificationEntryManager = this.notificationEntryManagerProvider.mo144get();
        NotificationGutsManager notificationGutsManager = this.notificationGutsManagerProvider.mo144get();
        NotificationLogger notificationLogger = this.notificationLoggerProvider.mo144get();
        NotificationInterruptStateProvider notificationInterruptStateProvider = this.notificationInterruptionStateProvider.mo144get();
        NotificationViewHierarchyManager notificationViewHierarchyManager = this.notificationViewHierarchyManagerProvider.mo144get();
        PanelExpansionStateManager panelExpansionStateManager = this.panelExpansionStateManagerProvider.mo144get();
        KeyguardViewMediator keyguardViewMediator = this.keyguardViewMediatorProvider.mo144get();
        DisplayMetrics displayMetrics = this.displayMetricsProvider.mo144get();
        MetricsLogger metricsLogger = this.metricsLoggerProvider.mo144get();
        Executor executor = this.uiBgExecutorProvider.mo144get();
        NotificationMediaManager notificationMediaManager = this.notificationMediaManagerProvider.mo144get();
        NotificationLockscreenUserManager notificationLockscreenUserManager = this.lockScreenUserManagerProvider.mo144get();
        NotificationRemoteInputManager notificationRemoteInputManager = this.remoteInputManagerProvider.mo144get();
        UserSwitcherController userSwitcherController = this.userSwitcherControllerProvider.mo144get();
        NetworkController networkController = this.networkControllerProvider.mo144get();
        BatteryController batteryController = this.batteryControllerProvider.mo144get();
        SysuiColorExtractor sysuiColorExtractor = this.colorExtractorProvider.mo144get();
        ScreenLifecycle screenLifecycle = this.screenLifecycleProvider.mo144get();
        WakefulnessLifecycle wakefulnessLifecycle = this.wakefulnessLifecycleProvider.mo144get();
        SysuiStatusBarStateController sysuiStatusBarStateController = this.statusBarStateControllerProvider.mo144get();
        this.bubblesManagerOptionalProvider.mo144get();
        Optional<Bubbles> optional2 = this.bubblesOptionalProvider.mo144get();
        VisualStabilityManager visualStabilityManager = this.visualStabilityManagerProvider.mo144get();
        DeviceProvisionedController deviceProvisionedController = this.deviceProvisionedControllerProvider.mo144get();
        NavigationBarController navigationBarController = this.navigationBarControllerProvider.mo144get();
        AccessibilityFloatingMenuController accessibilityFloatingMenuController = this.accessibilityFloatingMenuControllerProvider.mo144get();
        Lazy lazy = DoubleCheck.lazy(this.assistManagerLazyProvider);
        ConfigurationController configurationController = this.configurationControllerProvider.mo144get();
        NotificationShadeWindowController notificationShadeWindowController = this.notificationShadeWindowControllerProvider.mo144get();
        DozeParameters dozeParameters = this.dozeParametersProvider.mo144get();
        ScrimController scrimController = this.scrimControllerProvider.mo144get();
        Lazy lazy2 = DoubleCheck.lazy(this.lockscreenWallpaperLazyProvider);
        LockscreenGestureLogger lockscreenGestureLogger = this.lockscreenGestureLoggerProvider.mo144get();
        Lazy lazy3 = DoubleCheck.lazy(this.biometricUnlockControllerLazyProvider);
        Lazy lazy4 = DoubleCheck.lazy(this.notificationShadeDepthControllerLazyProvider);
        DozeServiceHost dozeServiceHost = this.dozeServiceHostProvider.mo144get();
        PowerManager powerManager = this.powerManagerProvider.mo144get();
        ScreenPinningRequest screenPinningRequest = this.screenPinningRequestProvider.mo144get();
        DozeScrimController dozeScrimController = this.dozeScrimControllerProvider.mo144get();
        VolumeComponent volumeComponent = this.volumeComponentProvider.mo144get();
        CommandQueue commandQueue = this.commandQueueProvider.mo144get();
        StatusBarComponent.Factory factory = this.statusBarComponentFactoryProvider.mo144get();
        PluginManager pluginManager = this.pluginManagerProvider.mo144get();
        Optional<LegacySplitScreen> optional3 = this.splitScreenOptionalProvider.mo144get();
        StatusBarNotificationActivityStarter.Builder builder = this.statusBarNotificationActivityStarterBuilderProvider.mo144get();
        ShadeController shadeController = this.shadeControllerProvider.mo144get();
        StatusBarKeyguardViewManager statusBarKeyguardViewManager = this.statusBarKeyguardViewManagerProvider.mo144get();
        ViewMediatorCallback viewMediatorCallback = this.viewMediatorCallbackProvider.mo144get();
        InitController initController = this.initControllerProvider.mo144get();
        Handler handler = this.timeTickHandlerProvider.mo144get();
        PluginDependencyProvider pluginDependencyProvider = this.pluginDependencyProvider.mo144get();
        KeyguardDismissUtil keyguardDismissUtil = this.keyguardDismissUtilProvider.mo144get();
        ExtensionController extensionController = this.extensionControllerProvider.mo144get();
        UserInfoControllerImpl userInfoControllerImpl = this.userInfoControllerImplProvider.mo144get();
        PhoneStatusBarPolicy phoneStatusBarPolicy = this.phoneStatusBarPolicyProvider.mo144get();
        KeyguardIndicationControllerGoogle keyguardIndicationControllerGoogle = this.keyguardIndicationControllerProvider.mo144get();
        DemoModeController demoModeController = this.demoModeControllerProvider.mo144get();
        StatusBarTouchableRegionManager statusBarTouchableRegionManager = this.statusBarTouchableRegionManagerProvider.mo144get();
        NotificationIconAreaController notificationIconAreaController = this.notificationIconAreaControllerProvider.mo144get();
        BrightnessSliderController.Factory factory2 = this.brightnessSliderFactoryProvider.mo144get();
        ScreenOffAnimationController screenOffAnimationController = this.screenOffAnimationControllerProvider.mo144get();
        WallpaperController wallpaperController = this.wallpaperControllerProvider.mo144get();
        OngoingCallController ongoingCallController = this.ongoingCallControllerProvider.mo144get();
        StatusBarHideIconsForBouncerManager statusBarHideIconsForBouncerManager = this.statusBarHideIconsForBouncerManagerProvider.mo144get();
        LockscreenShadeTransitionController lockscreenShadeTransitionController = this.lockscreenShadeTransitionControllerProvider.mo144get();
        FeatureFlags featureFlags = this.featureFlagsProvider.mo144get();
        Lazy lazy5 = DoubleCheck.lazy(this.voiceReplyClientProvider);
        KeyguardUnlockAnimationController keyguardUnlockAnimationController = this.keyguardUnlockAnimationControllerProvider.mo144get();
        this.mainHandlerProvider.mo144get();
        return new StatusBarGoogle(smartSpaceController, wallpaperNotifier, optional, context, notificationsController, fragmentService, lightBarController, autoHideController, statusBarWindowController, statusBarWindowStateController, keyguardUpdateMonitor, statusBarSignalPolicy, pulseExpansionHandler, notificationWakeUpCoordinator, keyguardBypassController, keyguardStateController, headsUpManagerPhone, dynamicPrivacyController, falsingManager, falsingCollector, broadcastDispatcher, notifShadeEventSource, notificationEntryManager, notificationGutsManager, notificationLogger, notificationInterruptStateProvider, notificationViewHierarchyManager, panelExpansionStateManager, keyguardViewMediator, displayMetrics, metricsLogger, executor, notificationMediaManager, notificationLockscreenUserManager, notificationRemoteInputManager, userSwitcherController, networkController, batteryController, sysuiColorExtractor, screenLifecycle, wakefulnessLifecycle, sysuiStatusBarStateController, optional2, visualStabilityManager, deviceProvisionedController, navigationBarController, accessibilityFloatingMenuController, lazy, configurationController, notificationShadeWindowController, dozeParameters, scrimController, lazy2, lockscreenGestureLogger, lazy3, lazy4, dozeServiceHost, powerManager, screenPinningRequest, dozeScrimController, volumeComponent, commandQueue, factory, pluginManager, optional3, builder, shadeController, statusBarKeyguardViewManager, viewMediatorCallback, initController, handler, pluginDependencyProvider, keyguardDismissUtil, extensionController, userInfoControllerImpl, phoneStatusBarPolicy, keyguardIndicationControllerGoogle, demoModeController, statusBarTouchableRegionManager, notificationIconAreaController, factory2, screenOffAnimationController, wallpaperController, ongoingCallController, statusBarHideIconsForBouncerManager, lockscreenShadeTransitionController, featureFlags, lazy5, keyguardUnlockAnimationController, this.delayableExecutorProvider.mo144get(), this.messageRouterProvider.mo144get(), this.wallpaperManagerProvider.mo144get(), this.startingSurfaceOptionalProvider.mo144get(), this.activityLaunchAnimatorProvider.mo144get(), this.alarmManagerProvider.mo144get(), this.notifPipelineFlagsProvider.mo144get(), this.jankMonitorProvider.mo144get(), this.deviceStateManagerProvider.mo144get(), this.dreamOverlayStateControllerProvider.mo144get(), this.wiredChargingRippleControllerProvider.mo144get());
    }
}
